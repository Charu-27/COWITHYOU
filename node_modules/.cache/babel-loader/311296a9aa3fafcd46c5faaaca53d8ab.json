{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\CoWithYou\\\\cowithyou\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport \"./login.css\";\nimport { Text, Stack, Flex, Box, Image, Heading, FormControl, Button, FormLabel, Icon, InputLeftElement, InputRightElement, InputGroup, Input, Link, Checkbox } from \"@chakra-ui/react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  var flag;\n\n  function validate(e) {\n    let name = e.target.value;\n\n    if (name.length == 0) {\n      flag = 0;\n    } else {\n      flag = 1;\n    }\n  }\n\n  function notify() {\n    if (flag == 1) {\n      toast(\"Login successfull\", {\n        position: \"top-center\"\n      });\n    }\n  }\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const LoginUser = async e => {\n    e.preventDefault();\n    const res = await fetch(\"/Login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = res.json();\n\n    if (!data || res.status === 400) {\n      window.alert(\"Invalid credentials\");\n    } else {\n      window.alert(\"Succesfully LoggedIn\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      action: \"submit\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter your E-mail\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            mt: '2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            mt: '2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        type: 'submit',\n        onClick: LoginUser,\n        size: \"larger\",\n        mt: '8',\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"Y7bHT9hHeaSkUMaY2QMcNWLqvG0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/CoWithYou/cowithyou/src/components/Login/Login.jsx"],"names":["react","useState","Text","Stack","Flex","Box","Image","Heading","FormControl","Button","FormLabel","Icon","InputLeftElement","InputRightElement","InputGroup","Input","Link","Checkbox","toast","ToastContainer","Login","flag","validate","e","name","target","value","length","notify","position","email","setEmail","password","setPassword","LoginUser","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","window","alert"],"mappings":"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","sourcesContent":["\r\nimport react,{useState} from \"react\";\r\nimport \"./login.css\";\r\nimport {Text,Stack,Flex,Box,Image,Heading,FormControl,Button,FormLabel, Icon,InputLeftElement,InputRightElement,InputGroup,Input,Link,Checkbox} from \"@chakra-ui/react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nfunction Login()\r\n{var flag;\r\n\r\n function validate(e) {\r\n   let name=e.target.value;\r\n   if(name.length==0)\r\n{flag=0;}\r\nelse{flag=1;}\r\n}\r\nfunction notify(){\r\n  if(flag==1)\r\n  {toast(\"Login successfull\",{position:\"top-center\"});}\r\n}\r\nconst [email,setEmail]=useState(\"\");\r\nconst [password,setPassword]=useState(\"\")\r\n\r\nconst LoginUser=async (e)=>{\r\n  e.preventDefault()\r\n  const res=await fetch(\"/Login\",{\r\n    method:\"POST\",\r\n    headers:{\r\n      \"Content-Type\":\"application/json\"\r\n    },\r\n    body:JSON.stringify({\r\nemail,password\r\n    })\r\n  })\r\n  const data=res.json();\r\n  if(!data||res.status===400){\r\n    window.alert(\"Invalid credentials\")\r\n  }\r\n  else{\r\n    window.alert(\"Succesfully LoggedIn\")\r\n  }\r\n}\r\n  \r\n   return(<>\r\n          <form method=\"POST\" action=\"submit\" >\r\n          <FormControl isRequired> \r\n            <FormLabel>E-mail</FormLabel>\r\n              <InputGroup size=\"sm\">\r\n              <Input id=\"email\" type=\"email\" placeholder=\"Enter your E-mail\"  value={email} onChange={(e)=>setEmail(e.target.value)}mt={'2'} />\r\n        </InputGroup></FormControl>\r\n        <FormControl isRequired> \r\n            <FormLabel>password</FormLabel>\r\n              <InputGroup size=\"sm\"> \r\n              <Input id=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}type=\"password\" placeholder=\"Enter your password\"  mt={'2'} />\r\n        </InputGroup></FormControl>\r\n\r\n            <Button className=\"button\" type={'submit'} onClick={LoginUser} size=\"larger\" mt={'8'} >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n  </>\r\n);}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}